{
    "swagger": "2.0",
    "info": {
      "title": "AI for Earth Penguin Guano Classification API",
      "version": "v0.1",
      "description": "This specification represents the core [AI for Earth](https://www.microsoft.com/en-us/aiforearth) API offering. An access key is required for access."
    },
    "host": "13.91.136.105:80",
    "basePath": "/v1/pytorch_api",
    "schemes": [
      "http"
    ],
    "securityDefinitions": {
      "apiKeyHeader": {
        "type": "apiKey",
        "name": "Ocp-Apim-Subscription-Key",
        "in": "header"
      },
      "apiKeyQuery": {
        "type": "apiKey",
        "name": "subscription-key",
        "in": "query"
      }
    },
    "security": [
      {
        "apiKeyHeader": []
      },
      {
        "apiKeyQuery": []
      }
    ],
    "paths": {
      "/classify": {
        "post": {
          "description": "This operation classifies the provided satellite image for guano segmentation. The provided image must be RGB or RGBA, in jpeg or png format, and its size must be at least 256x256 and at most 2048x2048.\n\nA successful classification will return a link to an image file that can be accessed via an Azure storage blob. The following labels are possible with the corresponding color labels:\n- <b>No Data</b> - black (0, 0 ,0)\n- <b>Water</b> - blue (0, 0, 255)\n- <b>Guano</b> - red (255, 0, 0)\n- <b>Trees</b> - light green (128, 255, 128)\n- <b>Rock/Bare</b> - brown (128, 96, 96)",
          "operationId": "0",
          "summary": "/classify",
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Media type of the request body. Supported formats are:\n- png\n- jpeg",
              "required": true,
              "type": "string",
              "format": "binary",
              "enum": [
                "png",
                "jpeg"
              ]
            }
          ],
          "responses": {
            "200": {
              "description": "The response will contain a link to the image file in the 'image_url' field.",
              "examples": {
                "application/json": {
                  "image_url" : "https://example.blob.core.windows.net/example.png",
                }
              }
            },
            "400": {
              "description": "Possible Errors: \n<ul>\n<li><b>AttributeError</b>\n<br/>Input image is empty or is not in RGB or RGBA mode.</li><li><b>ValueError</b>\n<br/>Input image is too large or too small.</li>\n</ul>"
            },
            "500": {
              "description": "Unsupported media type in the request body or other internal server error."
            }
          },
          "produces": [
            "application/json"
          ]
        }
      }
    }
  }