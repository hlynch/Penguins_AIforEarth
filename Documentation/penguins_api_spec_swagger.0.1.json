{
    "swagger": "2.0",
    "info": {
      "title": "AI for Earth Penguin Guano Classification API",
      "version": "v0.1",
      "description": "This specification represents the core [AI for Earth](https://www.microsoft.com/en-us/aiforearth) API offering. An access key is required for access."
    },
    "host": "13.91.136.105:80",
    "basePath": "/v1/pytorch_api",
    "schemes": [
      "http"
    ],
    "securityDefinitions": {
      "apiKeyHeader": {
        "type": "apiKey",
        "name": "Ocp-Apim-Subscription-Key",
        "in": "header"
      },
      "apiKeyQuery": {
        "type": "apiKey",
        "name": "subscription-key",
        "in": "query"
      }
    },
    "security": [
      {
        "apiKeyHeader": []
      },
      {
        "apiKeyQuery": []
      }
    ],
    "paths": {
      "/penguins/classify": {
        "post": {
          "description": "This operation classifies the provided satellite image for guano segmentation. The provided image's size must be at least 256x256 and at most 2048x2048 (TODO: any more requirements?).\n\nA successful classification will return a link to an image file that can be accessed via an Azure storage blob. The following labels are possible with the corresponding color labels:\n- <b>No Data</b> - black (0, 0 ,0)\n- <b>Water</b> - blue (0, 0, 255)\n- <b>Guano</b> - red (255, 0, 0)\n- <b>Trees</b> - light green (128, 255, 128)\n- <b>Rock/Bare</b> - brown (128, 96, 96)",
          "operationId": "0",
          "summary": "/penguin/classify",
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "(TODO: what type of image format(s) do we accept) Media type of the request body.",
              "required": true,
              "type": "string",
              "format": "binary",
              "enum": [
                "image"
              ]
            }
          ],
          "responses": {
            "200": {
              "description": "The response will contain a link to the image file in the 'image_link' field.  (TODO: describe output image colors -- doesn't need to be so specific. I just made up those numbers I think) The image will be colored corresponding the the following labels:\n- <b>No Data</b> - black (0, 0 ,0)\n- <b>Water</b> - blue (0, 0, 255)\n- <b>Guano</b> - red (255, 0, 0)\n- <b>Trees</b> - light green (128, 255, 128)\n- <b>Rock/Bare</b> - brown (128, 96, 96)\n\nThe size of the output image will (TODO: describe output size -- if it is the same just say that)."
            },
            "400": {
              "description": "Possible Errors: \n<ul>\n<li><b>InvalidImageAttribute</b>\n<br/>Input image is not in RGBA or RGB mode.</li><li><b>InvalidImageSize</b>\n<br/>Input image is too large or too small.</li>\n</ul>"
            },
            "415": {
              "description": "Unsupported media type in the request body. (TODO: What image types do we accept? Also, have to enforce this in code)"
            }
          },
          "produces": [
            "application/json"
          ]
        }
      }
    }
  }